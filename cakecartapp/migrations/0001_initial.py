# Generated by Django 4.2.3 on 2023-07-19 11:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Berries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)], verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='Cake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, verbose_name='Название')),
                ('category', models.CharField(choices=[('TEA_PARTY', 'На чаепитие'), ('BIRTHDAY_PARTY', 'На день рождения'), ('WEDDING', 'На свадьбу'), ('CUSTOM', 'На заказ')], default='CUSTOM', max_length=200, verbose_name='Категория торта')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Изображение торта')),
                ('inscription', models.CharField(blank=True, max_length=300, verbose_name='Надпись')),
                ('berries', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='cakecartapp.berries', verbose_name='Ягоды')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Имя клиента')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта клиента')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=20, region='RU', unique=True, verbose_name='Телефонный номер клиента')),
            ],
        ),
        migrations.CreateModel(
            name='Decoration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)], verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)], verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], default=1, verbose_name='Количество')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)], verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='Topping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)], verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий к заказу')),
                ('address', models.CharField(max_length=350, verbose_name='Адрес доставки')),
                ('delivery_date_time', models.DateTimeField(db_index=True, verbose_name='День и время доставки')),
                ('status', models.CharField(choices=[('TBA', 'На уточнении'), ('ASSEMBLING', 'Собирается'), ('DELIVERING', 'Доставляется'), ('DONE', 'Выполнен')], default='TBA', max_length=100, verbose_name='Статус заказа')),
                ('courier_comment', models.TextField(blank=True, verbose_name='Комментарий для курьера')),
                ('cake', models.ManyToManyField(related_name='orders', to='cakecartapp.cake', verbose_name='Торт')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='cakecartapp.client', verbose_name='Клиент')),
            ],
        ),
        migrations.AddField(
            model_name='cake',
            name='decoration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='cakecartapp.decoration', verbose_name='Декор'),
        ),
        migrations.AddField(
            model_name='cake',
            name='form',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='cakecartapp.form', verbose_name='Форма'),
        ),
        migrations.AddField(
            model_name='cake',
            name='levels',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='cakecartapp.levels', verbose_name='Количество уровней'),
        ),
        migrations.AddField(
            model_name='cake',
            name='topping',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cakes', to='cakecartapp.topping', verbose_name='Топпинг'),
        ),
    ]
